services:
  nginx:
    container_name: starbucks_js_nginx
    image: nginx:stable-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates
      - ./cert/cert.pem:/etc/nginx/cert/cert.pem
      - ./cert/key.pem:/etc/nginx/cert/key.pem
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - starbucks_js_network
  
  backend:
    container_name: starbucks_js_backend
    build:
      dockerfile: Dockerfile
      context: backend
      target: development
    volumes:
      - ./backend:/usr/src/app
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - starbucks_js_network

  postgres:
    container_name: starbucks_js_postgres
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env
    networks:
      - starbucks_js_network

  redis:
    container_name: starbucks_js_redis
    image: redis:alpine
    restart: always
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_PORT}"
    env_file:
      - .env
    networks:
      - starbucks_js_network

  minio:
    container_name: starbucks_js_minio
    image: bitnami/minio
    #    command: server --console-address ":9001"
    environment:
      MINIO_SERVER_URL: "http://${MINIO_ENDPOINT}:${MINIO_PORT}"
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "9001:9001"
    env_file:
      - .env
    networks:
      - starbucks_js_network

networks:
  starbucks_js_network:
    driver: bridge